---
import Icon from "../atoms/icon.astro";
import { getBlogs } from "../../libs/microcms";
import type { Blog, MicroCMSResponse } from "../../libs/microcms.d.ts";

// 1ページあたりの表示件数を定義
const PER_PAGE = 10;
const page = Astro.params.page ? parseInt(Astro.params.page) : 1;
const offset = (page - 1) * PER_PAGE;

// 記事一覧表示のために、最初の10件の記事を取得
const recentBlogsResponse: MicroCMSResponse<Blog> = await getBlogs({
	limit: PER_PAGE,
	offset: 0,
});

const totalCount = recentBlogsResponse.totalCount; // 全記事数
---

<div class="flex justify-center mt-[120px] sm:mt-[80px]">
	<nav class="flex items-center gap-[12px]">
		{
			page > 1 && (
				<a
					href={page === 2 ? "/" : `/blogs/${page - 1}`}
					class="flex items-center w-[40px] h-[40px] aspect-square rounded-full bg-white opacity-hover duration"
				>
					<Icon
						filename="icon_arrow_left"
						color="#333"
						customClass="w-[24px]"
					/>
				</a>
			)
		}

		{
			Array.from(
				{ length: Math.ceil(totalCount / PER_PAGE) },
				(_, i) => i + 1,
			).map((p) => (
				<a
					href={p === 1 ? "/" : `/blogs/${p}`}
					class={`w-[40px] h-[40px] aspect-square rounded-full flex items-center justify-center opacity-hover duration ${p === page ? "bg-[#0079C9] text-white" : "bg-white"}`}
				>
					<span>{p}</span>
				</a>
			))
		}

		{
			page < Math.ceil(totalCount / PER_PAGE) && (
				<a
					href={`/blogs/${page + 1}`}
					class="flex items-center justify-center w-[40px] h-[40px] aspect-square rounded-full bg-white opacity-hover duration"
				>
					<Icon
						filename="icon_arrow_right"
						color="#333"
						customClass="w-[24px]"
					/>
				</a>
			)
		}
	</nav>
</div>
