---
import Layout from "../layouts/Layout.astro";
import Header from "../components/organisms/header.astro";
import { getBlogs, getCategoryList } from "../libs/microcms";
import type { Category } from "@libs/microcms.ts";
import { formatDate } from "../../src/utils/date";

const [blogsResponse, categoriesResponse] = await Promise.all([
	getBlogs(),
	getCategoryList(),
]);

const blogs = blogsResponse.contents;
const categories = categoriesResponse.contents;

const categoryCounts = categories.map((category) => {
	const count = blogs.filter((blog) => blog.category.id === category.id).length;
	return {
		...category,
		count,
	};
});

interface Props {
	categories: Category[];
}
---

<Layout title="miyata blog">
	<Header
		navItems={[
			{ href: "/blog", text: "Blog" },
			{ href: "/about", text: "About" },
			{ href: "/contact", text: "Contact" },
		]}
	/>
	<main class="flex justify-between inner">
		<ul class="flex gap-[36px]">
			{
				blogs.map((blog) => (
					<li class="max-w-[408px] w-full">
						<a href={`/blogs/${blog.id}`} class="opacity-hover duration">
							<div>
								{blog.eyecatch ? (
									<img
										src={blog.eyecatch.url}
										alt={blog.title}
										class="rounded-lg"
									/>
								) : (
									<img
										src="/public/img/dummyImage.png"
										alt={blog.title}
										class="rounded-lg"
									/>
								)}
							</div>
							<div class="p-[12px]">
								<div class="flex gap-[10px]">
								<p class="font-bold text-[12px] leading-[1] tracking-[0.06em] px-[20px] pt-[4px] pb-[5px] text-[#FFF] rounded-full" style={`background-color: ${blog.category.labelColor};`}>
									{blog.category.name}
								</p>
									{blog.readingTime && (
										<p class="font-bold text-[12px] leading-[1] tracking-[0.06em] px-[20px] pt-[4px] pb-[5px] bg-[#F6F6F6] rounded-full">
											<span class="text-[#666]">読了までの時間：</span>{blog.readingTime}分
										</p>
									)}
								</div>
								<p class="font-bold text-[16px] leading-[1.48] tracking-[0.06em] mt-[12px]">
									{blog.title}
								</p>
								<p class="font-medium text-[12px] leading-[1.48] tracking-[0.06em] mt-[8px]">
									{blog.description}
								</p>
								<p class="font-medium text-[10px] leading-[1] tracking-[0.06em] mt-[8px]">
									{formatDate(blog.publishedAt)}
								</p>
								<p class="font-medium text-[10px] leading-[1] tracking-[0.06em] mt-[8px]">
									{blog.tag.name}
								</p>
							</div>
						</a>
					</li>
				))
			}
		</ul>
		<div>
			<p>カテゴリ</p>
			<ul>
				{
					categoryCounts.length === 0 ? (
						<li class="text-sm text-muted-foreground">カテゴリがありません</li>
					) : (
						categoryCounts.map((category) => (
							<li>
								<a
									href={`/categories/${category.slug}`}
									class="text-sm hover:underline"
								>
									{category.name}
									<span class="bracket">{category.count}</span>
								</a>
							</li>
						))
					)
				}
			</ul>
		</div>
	</main>
</Layout>
