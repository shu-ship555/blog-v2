---
import Layout from "../../../../../layouts/Layout.astro";
import Pager from "../../../../../components/organisms/pager.astro";
import Icon from "../../../../../components/atoms/icon.astro";
import { getAllContents } from "../../../../../libs/microcms";
import type { GetStaticPathsOptions } from "astro";

type Category = {
	id: string;
	slug: string;
	title: string;
	enTitle: string;
};

type Tag = {
	id: string;
	slug: string;
	title: string;
	enTitle: string;
};

type Image = {
	id: string;
	title: string;
	image: { url: string; width: number; height: number };
	sizeHorizontal: number;
	sizeVertical: number;
	isPrivate: boolean;
	category: Category;
	tag: Tag[];
};

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	const IMAGES_PER_PAGE = 24;
	const res = await getAllContents<Image>("images");
	const images = res.contents;

	const allUniqueCategories = [...new Set(images.map((image) => JSON.stringify(image.category)))].map((str) =>
		JSON.parse(str),
	);
	const allUniqueTags = [...new Set(images.flatMap((image) => image.tag.map((t) => JSON.stringify(t))))].map((str) =>
		JSON.parse(str),
	);
	const allUniqueSizes = [...new Set(images.map((image) => `${image.sizeHorizontal}×${image.sizeVertical}`))];

	const paginatedPaths = allUniqueTags.flatMap((tag) => {
		const filteredImages = images.filter((image) => image.tag.some((t) => t.slug === tag.slug));

		const paginatedPages = paginate(filteredImages, {
			pageSize: IMAGES_PER_PAGE,
			params: { slug: tag.slug },
			props: {
				tagTitle: tag.title,
				totalCount: filteredImages.length,
				perPage: IMAGES_PER_PAGE,
				uniqueSizes: allUniqueSizes,
				uniqueCategories: allUniqueCategories,
				uniqueTags: allUniqueTags,
			},
		});

		paginatedPages.unshift({
			params: { slug: tag.slug, page: undefined },
			props: paginatedPages[0].props,
		});

		return paginatedPages;
	});

	return paginatedPaths;
}

const { page, totalCount, perPage, uniqueSizes, uniqueCategories, uniqueTags, tagTitle } = Astro.props as {
	page: { data: Image[] };
	totalCount: number;
	perPage: number;
	uniqueSizes: string[];
	uniqueCategories: { slug: string; title: string; enTitle: string }[];
	uniqueTags: { slug: string; title: string; enTitle: string }[];
	tagTitle: string;
};

const images = page.data;
---

<Layout
	title={`Web制作の実績[画像]｜デザインもできるフロントエンドエンジニアのポートフォリオ - ${tagTitle}`}
	breadcrumb={true}
	isImagesPage={true}
	imageCategory={{
		slug: Astro.params.slug,
		title: tagTitle,
	}}
	navigation={true}
>
	<main class="inner relative pt-[96px] sm:pt-[48px] pb-[120px] sm:pb-[64px]">
		<h1 class="text-[32px] sm:text-[24px] font-black leading-[1.4] tracking-[0.04em] break-normal">
			Images｜画像 <span class="font-normal bracket">Graphic / {tagTitle}</span>
		</h1>
		<div
			class="flex items-center justify-between sm:flex-col-reverse sm:justify-start sm:items-start sm:gap-[16px] mt-[48px] sm:mt-[24px]"
		>
			<div class="flex flex-wrap gap-[24px] sm:gap-[16px]">
				<div class="relative js-filter">
					<div class="cursor-pointer js-filter-btn">
						<p class="inline-block text-[16px] sm:text-[14px] leading-none tracking-[0.06em] font-bold">CATEGORY</p>
						<Icon
							filename="icon_arrow_right"
							color="#333"
							customClass="w-[24px] sm:w-[20px] align-[-6px] sm:align-[-5px] duration js-filter-icon"
						/>
					</div>
					<ul
						class="js-filter-menu z-50 bg-[#FFF]/[0.16] backdrop-blur-lg px-[20px] sm:px-[16px] py-[12px] sm:py-[8px] absolute top-[24px] sm:top-[20px] left-0 text-nowrap text-[14px] sm:text-[12px] leading-none tracking-[0.06em] font-normal hidden flex-col"
					>
						<li class="opacity-hover duration py-[12px] sm:py-[8px] cursor-pointer">
							<a href="/works/image" class="">All｜すべて</a>
						</li>
						{
							uniqueCategories.map((category) => (
								<li class="opacity-hover duration py-[12px] sm:py-[8px] cursor-pointer">
									<a href={`/works/image/category/${category.slug}`} class="">
										{category.enTitle}｜{category.title}
									</a>
								</li>
							))
						}
					</ul>
				</div>
				<div class="relative js-filter">
					<div class="cursor-pointer js-filter-btn">
						<p class="inline-block text-[16px] sm:text-[14px] leading-none tracking-[0.06em] font-bold">SIZE</p>
						<Icon
							filename="icon_arrow_right"
							color="#333"
							customClass="w-[24px] sm:w-[20px] align-[-6px] sm:align-[-5px] duration js-filter-icon"
						/>
					</div>
					<ul
						class="js-filter-menu z-50 bg-[#FFF]/[0.16] backdrop-blur-lg px-[20px] sm:px-[16px] py-[12px] sm:py-[8px] absolute top-[24px] sm:top-[20px] left-0 text-nowrap text-[14px] sm:text-[12px] leading-none tracking-[0.06em] font-normal hidden flex-col"
					>
						<li class="opacity-hover duration py-[12px] sm:py-[8px] cursor-pointer">
							<a href="/works/image" class="">All｜すべて</a>
						</li>
						{
							uniqueSizes.map((size) => (
								<li class="opacity-hover duration py-[12px] sm:py-[8px] cursor-pointer">
									<a href={`/works/image/size/${size.replace("×", "x")}`} class="">
										{size}
									</a>
								</li>
							))
						}
					</ul>
				</div>
			</div>
		</div>
		<div class="relative js-filter mt-[16px] sm:mt-[12px]">
			<div class="inline-block cursor-pointer js-filter-btn">
				<p class="inline-block text-[16px] sm:text-[14px] leading-none tracking-[0.06em] font-bold">TAG</p>
				<Icon
					filename="icon_arrow_right"
					color="#333"
					customClass="w-[24px] sm:w-[20px] align-[-6px] sm:align-[-5px] duration js-filter-icon"
				/>
			</div>
			<ul
				class="js-filter-menu z-50 bg-[#FFF]/[0.16] backdrop-blur-lg px-[20px] sm:px-[16px] pt-[20px] pb-[24px] sm:pt-[16px] sm:pb-[20px] absolute w-full top-[24px] sm:top-[20px] left-0 text-nowrap text-[14px] sm:text-[12px] leading-none tracking-[0.06em] font-normal hidden flex-col"
			>
				<li>
					<a href="/works/image" class="inline-block cursor-pointer opacity-hover duration">All｜すべて</a>
				</li>
				<li class="flex flex-wrap gap-[16px] sm:gap-[12px] mt-[16px] sm:mt-[12px]">
					{
						uniqueTags.map((tag) => (
							<div class="cursor-pointer opacity-hover duration">
								<a href={`/works/image/tag/${tag.slug}`} class="hashtag">
									{tag.title}
								</a>
							</div>
						))
					}
				</li>
			</ul>
		</div>
		<ul class="flex flex-wrap gap-[48px] sm:gap-[32px] mt-[48px] sm:mt-[24px]">
			{
				images.map((image) => (
					<li class="w-[calc(1184px/3_-_32px)] sm:w-full relative">
						<div class="relative js-expand-modal js-em-l aspect-square px-[32px] pt-[32px] pb-[36px] bg-[#fafafa] flex items-center justify-center">
							<div class="expand-img ei-s duration">
								<img src={image.image.url} alt={image.title} class="w-full" />
							</div>
							<button class="expand-btn absolute bottom-[12px] left-1/2 -translate-x-1/2 bg-[#F8F8F8] text-[12px] sm:text-[10px] font-bold leading-none tracking-[0.04em] text-[#0079C9] opacity-hover duration">
								拡大
								<Icon
									filename="icon_fullscreen"
									color="#0079C9"
									customClass="w-[14px] ml-[4px] sm:w-[12px] align-text-top sm:ml-[2px]"
								/>
							</button>
						</div>
						<div class="bg-[#eee] inline-block mt-[16px] sm:mt-[12px] font-bold text-[12px] leading-[1] tracking-[0.06em] sm:text-[10px] opacity-hover duration rounded-full">
							<a
								href={`/works/image/category/${image.category.slug}`}
								class="px-[20px] pt-[4px] pb-[5px] sm:pb-[4px] inline-block"
							>
								{image.category.title}
							</a>
						</div>
						<p class="text-[16px] sm:text-[14px] mt-[8px] sm:mt-[6px] leading-[1.48] tracking-[0.06em] font-bold">
							{image.title}
						</p>
						<div class="text-[12px] sm:text-[10px] mt-[4px] leading-[1.48] tracking-[0.06em] text-[#666]">
							{image.tag.map((t) => (
								<a href={`/works/image/tag/${t.slug}`} class="opacity-hover duration">
									<span class="hashtag mr-[8px]">
										<span>{t.title}</span>
									</span>
								</a>
							))}
						</div>
						{image.isPrivate === true && (
							<div class="absolute top-0 left-0 text-[10px] leading-none tracking-[0.04em] px-[12px] pt-[6px] pb-[8px] font-bold bg-[#eee]">
								自主制作
							</div>
						)}
					</li>
				))
			}
		</ul>
		<div class="mt-[48px]">
			<Pager page={page} totalCount={totalCount} basePath={`/works/image/tag/${Astro.params.slug}`} perPage={perPage} />
		</div>
	</main>
</Layout>
